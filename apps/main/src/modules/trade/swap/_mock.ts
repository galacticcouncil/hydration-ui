import {
  OhlcData,
  toUTCTimestamp,
} from "@galacticcouncil/ui/components/TradingViewChart/utils"
import { map, pipe } from "remeda"

// Trade app mock data until we have real data
export const MOCK_DATA = [
  [
    1741629600000, 1741633200000, 1741636800000, 1741640400000, 1741647600000,
    1741651200000, 1741654800000, 1741669200000, 1741672800000, 1741676400000,
    1741683600000, 1741690800000, 1741694400000, 1741698000000, 1741701600000,
    1741705200000, 1741716000000, 1741719600000, 1741723200000, 1741726800000,
    1741748400000, 1741752000000, 1741759200000, 1741762800000, 1741766400000,
    1741770000000, 1741777200000, 1741780800000, 1741784400000, 1741788000000,
    1741791600000, 1741798800000, 1741813200000, 1741838400000, 1741845600000,
    1741849200000, 1741852800000, 1741856400000, 1741860000000, 1741867200000,
    1741870800000, 1741878000000, 1741881600000, 1741888800000, 1741896000000,
    1741899600000, 1741910400000, 1741921200000, 1741924800000, 1741928400000,
    1741932000000, 1741935600000, 1741939200000, 1741942800000, 1741946400000,
    1741950000000, 1741953600000, 1741957200000, 1741964400000, 1741971600000,
    1741978800000, 1741982400000, 1741986000000, 1742000400000, 1742004000000,
    1742011200000, 1742014800000, 1742018400000, 1742022000000, 1742025600000,
    1742029200000, 1742032800000, 1742040000000, 1742047200000, 1742050800000,
    1742058000000, 1742061600000, 1742065200000, 1742068800000, 1742072400000,
    1742076000000, 1742079600000, 1742083200000, 1742086800000, 1742090400000,
    1742094000000, 1742104800000, 1742108400000, 1742112000000, 1742115600000,
    1742119200000, 1742122800000, 1742126400000, 1742130000000, 1742133600000,
    1742137200000, 1742144400000, 1742148000000, 1742151600000, 1742155200000,
    1742158800000, 1742162400000, 1742166000000, 1742169600000, 1742176800000,
    1742187600000, 1742194800000, 1742202000000, 1742209200000, 1742212800000,
    1742216400000, 1742220000000, 1742223600000, 1742227200000,
  ],
  [
    106.52687147567778, 108.37576403889865, 109.34826007255653,
    110.04067915885365, 109.76709234162132, 113.45831863341658,
    116.66428574303512, 108.71983735249859, 108.62729018644332,
    109.11637070570828, 108.67330024535812, 107.4515511035804,
    108.7872298974617, 109.04133690993577, 109.64038298054709,
    109.05696296540543, 103.71413349071629, 103.31590190802152,
    102.86305791068062, 102.48586530514945, 103.9445055851617,
    104.44138015187005, 104.02689471700558, 103.98599030350722,
    102.13247669087467, 102.48501041427053, 103.19194265287013,
    102.8600832276454, 103.05029285803175, 104.42291230342693,
    107.56084627963384, 107.03420709985456, 106.60694498289654,
    105.30423683478548, 105.6077381468808, 108.54746637235407,
    109.5140333722309, 108.84149799249158, 108.26866355176931,
    107.3277139038031, 106.6836624293203, 108.85401306768651,
    109.33734068956619, 110.14033600353778, 110.21435400152158,
    110.08887612978957, 108.1498556403575, 107.45988344238937,
    107.3387378073628, 107.38430662614039, 107.21236102873273,
    107.13635633769238, 106.72389027428231, 106.33864708069787,
    105.56115982685331, 104.13079899033697, 103.88165596563991,
    103.70343600378638, 103.03901919391924, 103.02537936176897,
    102.2203026291817, 102.16167587631038, 101.91320365120652,
    101.7709024825091, 102.08330825010296, 100.86494067364525,
    100.38439434173777, 100.83453838125654, 101.73954879342503,
    101.97612374003911, 101.7261709004538, 101.660092650406, 96.36931941625518,
    96.67680889296246, 95.46024714001668, 95.52616814813761, 95.38187232329663,
    95.69863822986638, 96.10319036382046, 95.99940548132888, 95.49597588887714,
    95.78487483391302, 96.05323849243008, 97.02993960132761, 97.33840609724658,
    97.41995376776705, 97.39460961331443, 97.63432583335857, 97.45786546358745,
    98.22742942024608, 98.61854237435264, 99.57258806374567, 99.48080756484677,
    99.96839252132581, 99.25551144658752, 99.68101194046203, 98.94863387032937,
    101.04174052330895, 101.47869444621779, 102.20291268755142,
    101.7342011256632, 101.75089894375444, 101.81831272417098,
    101.82377281797405, 100.34304744583557, 99.82223259849474,
    98.62610790323873, 97.59972089307848, 98.17603702397818, 98.21966899325784,
    96.33772898653586, 98.50618297578542, 98.48973202264894, 98.43423379212703,
  ],
  [
    826626.683624818, 1627429.4846447108, 63850.349081767636, 4702.692549529132,
    8000, 10000, 8000, 299373.16519274726, 120000, 802008.4638255415,
    77580.42069191416, 1035953.4660944447, 42859.540530955186,
    16912.701598802458, 8000, 286000, 638003.6874464303, 295781.4075016102,
    84321.97361418579, 240000, 10924, 12003.783286567472, 11098.182366113262,
    1683.242022240932, 6127.94860145248, 16000, 48702.880000000005, 9336,
    1286052.8049561018, 6800, 4000000, 113729.68273639731, 4711.044905066844,
    58743.82867425856, 19512.347607208303, 616747.1550123645, 8761.122669778471,
    185975.18314955165, 2192, 10680, 4267.346497172812, 40699.22542055648,
    10234.333232986844, 317.801568872672, 81253.58040402544, 9055.451397236295,
    424406.66964143387, 46342.295203525966, 4431.246221283504, 1300,
    12148.519264018956, 1669.333137003844, 17803.014449229915,
    53390.63427372424, 640, 433415.46856284235, 9732, 62184.81274960955,
    599547.1691831846, 78000, 275.540141192696, 86923.79237172304,
    13420.314961922642, 408778.0366010121, 1443558.1121584312,
    7666.643287634501, 1417492.3202946004, 388270.65136267745,
    795856.9074973365, 207604.10234988513, 244142.81016108915,
    32467.08115462354, 469432.5450453536, 13068.47881792166, 1846082.4902052237,
    76391.7498534279, 319992.1538497898, 129480, 4400, 20400, 41004, 4800,
    659766.5742096755, 1372813.3171596217, 8002.265121150524,
    1226617.6836782796, 15200, 1701.26016293032, 81468.96360533302,
    228385.5527287725, 141044.08449179505, 76254.51211419213, 30033.20636167725,
    872002.3980845516, 1632125.3431971974, 9040, 12633.500141138493,
    2540.575740371748, 1549.6196248340277, 840976, 459600, 4000,
    8116.197032985168, 2944.076390125364, 1402.101429404456, 67444.43141114098,
    616777.449684004, 39039.88835723139, 372, 27692.139432980715,
    115110.79894169835, 12953.635555123501, 771562.7058829335,
    31404.37554490321,
  ],
] as const

export const DATA: OhlcData[] = pipe(
  MOCK_DATA[0],
  map((time, index) => ({
    time: toUTCTimestamp(time),
    close: MOCK_DATA[1][index] as number,
    volume: MOCK_DATA[2][index] as number,
  })),
)
